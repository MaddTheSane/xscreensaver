/*
 * Imakefile file for xscreensaver, Copyright (c) 1993-1997 Jamie Zawinski.
 *
 * You should not need to edit this file; edit ../config.h instead.
 *
 */

#include "../config.h"

#ifdef NO_LOCKING
# undef INSTALL_SETUID
#endif

#ifdef HAVE_XIDLE_EXTENSION
# define XIDLE_DEF -DHAVE_XIDLE_EXTENSION
#else
# define XIDLE_DEF
#endif

#ifdef HAVE_MIT_SAVER_EXTENSION
# define MIT_SAVER_DEF -DHAVE_MIT_SAVER_EXTENSION
#else
# define MIT_SAVER_DEF
#endif

#ifdef HAVE_SGI_SAVER_EXTENSION
# define SGI_SAVER_DEF -DHAVE_SGI_SAVER_EXTENSION
#else
# define SGI_SAVER_DEF
#endif

#ifdef NO_LOCKING
# define LOCKING_DEF -DNO_LOCKING
#else
# define LOCKING_DEF
#endif

#ifdef NO_SETUID
# define SETUID_DEF -DNO_SETUID
#else
# define SETUID_DEF
#endif

#ifdef HAVE_SHADOW
# define SHADOW_DEF -DHAVE_SHADOW
#else
# define SHADOW_DEF
#endif

#ifdef HAVE_DEC_ENHANCED
# undef SHADOW_DEF
# define SHADOW_DEF -DHAVE_DEC_ENHANCED
#endif

#ifdef NO_MOTIF
# define DBOX_DEF -DNO_MOTIF
# define DBOX_SRC $(ATHENA_SRCS)
# define DBOX_OBJ $(ATHENA_OBJS)
# define DBOX_LIB -lXaw
# define DBOX_INC
#else
# define DBOX_DEF
# define DBOX_SRC $(MOTIF_SRCS)
# define DBOX_OBJ $(MOTIF_OBJS)
# define DBOX_LIB $(MOTIFLDOPTIONS) $(MOTIFLIBS)
# define DBOX_INC $(MOTIFINCLUDES)
#endif

         UTILS = ../utils
      INCLUDES = -I$(UTILS) DBOX_INC
       DEFINES = SETUID_DEF XIDLE_DEF MIT_SAVER_DEF SGI_SAVER_DEF \
		 DBOX_DEF LOCKING_DEF SHADOW_DEF R5ISMS
     SAVERLIBS = $(XMULIB) $(XTOOLLIB) $(XSSLIB) $(EXTENSIONLIB) \
		 $(XLIB) $(DEC_ENHANCED_LIB)
      COMMLIBS = $(XLIB)
     UTIL_SRCS = $(UTILS)/resources.c $(UTILS)/fade.c $(UTILS)/visual.c \
		 $(UTILS)/usleep.c $(UTILS)/yarandom.c $(UTILS)/xroger.c
     UTIL_OBJS = $(UTILS)/resources.o $(UTILS)/fade.o $(UTILS)/visual.o \
		 $(UTILS)/usleep.o $(UTILS)/yarandom.o $(UTILS)/xroger.o
    MOTIF_SRCS = dialogs-Xm.c
    MOTIF_OBJS = dialogs-Xm.o
   ATHENA_SRCS = dialogs-Xaw.c
   ATHENA_OBJS = dialogs-Xaw.o
     SAVERSRCS = xscreensaver.c timers.c windows.c xset.c subprocs.c \
		 stderr.c demo.c lock.c passwd.c
     SAVEROBJS = xscreensaver.o timers.o windows.o xset.o subprocs.o \
		 stderr.o demo.o lock.o passwd.o
         SRCS1 = $(SAVERSRCS) DBOX_SRC $(UTIL_SRCS)
         OBJS1 = $(SAVEROBJS) DBOX_OBJ $(UTIL_OBJS)
      COMMSRCS = xscreensaver-command.c
      COMMOBJS = xscreensaver-command.o
         SRCS2 = $(COMMSRCS)
         OBJS2 = $(COMMOBJS)
           MEN = xscreensaver.man xscreensaver-command.man
      TARFILES = README Imakefile $(SAVERSRCS) $(MOTIF_SRCS) $(ATHENA_SRCS) \
                 $(COMMSRCS) xscreensaver.h XScreenSaver.ad dialogs.xd \
                 $(MEN) .gdbinit
          NULL =

#if defined(HPArchitecture) && !defined(NO_LOCKING)
EXTRA_LIBRARIES = -lXhp11	/* for XHPDisableReset() */
#endif

#if defined(NetBSDArchitecture) && !defined(NO_LOCKING)
EXTRA_LIBRARIES = -lcrypt
#endif

#if defined(i386ScoArchitecture)
EXTRA_LIBRARIES = -lintl -lprot -lx -lcrypt_i
#endif

#if defined(HAVE_DEC_ENHANCED)
EXTRA_LIBRARIES = -lsecurity -lm
#endif

all:: xscreensaver xscreensaver-command

echo_tarfiles:
	@echo $(TARFILES)

PROGRAMS = xscreensaver xscreensaver-command

/* build this before calling makedepend */
depend:: XScreenSaver.ad.h

#ifdef INSTALL_SETUID
#undef  InstallProgram
#define InstallProgram(p,d) InstallProgramWithFlags(p,d,$(INSTUIDFLAGS))
#endif

ComplexProgramTarget_1(xscreensaver,DBOX_LIB $(SAVERLIBS), $(NULL))

#ifdef INSTALL_SETUID
#undef  InstallProgram
#define InstallProgram(p,d) InstallProgramWithFlags(p,d,$(NULL))
#endif

ComplexProgramTarget_2(xscreensaver-command,$(COMMLIBS),$(NULL))

InstallAppDefaults(XScreenSaver)

xscreensaver.o: XScreenSaver.ad.h $(UTILS)/version.h
xscreensaver-command.o: $(UTILS)/version.h

demo.o: $(UTILS)/version.h
lock.o: $(UTILS)/version.h

XScreenSaver.ad.h: XScreenSaver.ad
	$(UTILS)/ad2c XScreenSaver.ad > XScreenSaver.ad.h

clean::
	$(RM) XScreenSaver.ad.h


#if defined(SparcArchitecture) || defined(SGIArchitecture)
# undef  UsePurify
# define UsePurify
#endif

#ifdef UsePurify
        PURIFY = purify
 PURIFYOPTIONS = 

# undef  PurifyProgramTarget
# define PurifyProgramTarget(program,deplist,linklist)			@@\
program.pure: deplist							@@\
	RemoveTargetProgram($@)						@@\
	$(CCENVSETUP) $(PURIFY) $(PURIFYOPTIONS) $(CC)			  \
	  -o $@ $(LDOPTIONS) linklist $(EXTRA_LOAD_FLAGS)

PurifyProgramTarget(xscreensaver,$(OBJS1),$(OBJS1) DBOX_LIB $(SAVERLIBS))

#endif /* Purify */
